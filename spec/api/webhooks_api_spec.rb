=begin
#Checkout.com API Reference

## Introduction Checkout.com provides a collection of APIs that enable you to process and manage payments.    Our APIs accept and return JSON in the HTTP body and return HTTP response codes to indicate errors. You can consume the APIs directly using your favorite HTTP/REST library or make use of one of our <a href=\"https://docs.checkout.com/quickstart/integrate/sdks\" target=\"_blank\">SDKs</a>.    Our unified payments API allows you to accept payments from cards, digital wallets and the most popular alternative payment methods, as well as pay out to a variety of destinations, all using the same integration.  And with our webhook management, events and disputes APIs, you can keep on top of your transactions and react to any chargebacks, keeping your business running smoothly. # Authentication When you sign up for an account, you are given a secret and public API key pair. You authenticate with our API by providing the appropriate key in the request Authorization header.  Never share your secret keys. Keep them guarded and secure.   <!-- ReDoc-Inject: <security-definitions> --> 

The version of the OpenAPI document: 1.0.0
Contact: support@checkout.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::WebhooksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WebhooksApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::WebhooksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhooksApi' do
    it 'should create an instance of WebhooksApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::WebhooksApi)
    end
  end

  # unit tests for partially_update_webhook
  # Partially update webhook
  # Updates all or some of the registered webhook details
  # @param id The webhook identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [WebhookRequest] :webhook_request 
  # @return [Webhook]
  describe 'partially_update_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for register_webhook
  # Register webhook
  # Register a new webhook endpoint that Checkout.com will post all or selected events to 
  # @param [Hash] opts the optional parameters
  # @option opts [WebhookRequest] :webhook_request 
  # @return [Webhook]
  describe 'register_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_webhook
  # Remove webhook
  # Removes an existing webhook
  # @param id The webhook identifier 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_webhook
  # Retrieve webhook
  # Retrieves the webhook with the specified identifier string 
  # @param id The webhook identifier 
  # @param [Hash] opts the optional parameters
  # @return [WebhookRequest]
  describe 'retrieve_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_webhooks
  # Retrieve webhooks
  # Retrieves the webhooks configured for the channel identified by your API key 
  # @param [Hash] opts the optional parameters
  # @return [Array<Webhook>]
  describe 'retrieve_webhooks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_webhook
  # Update webhook
  # Updates an existing webhook 
  # @param id The webhook identifier 
  # @param [Hash] opts the optional parameters
  # @option opts [WebhookRequest] :webhook_request 
  # @return [Webhook]
  describe 'update_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
