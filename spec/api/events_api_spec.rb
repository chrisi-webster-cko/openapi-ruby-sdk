=begin
#Checkout.com API Reference

## Introduction Checkout.com provides a collection of APIs that enable you to process and manage payments.    Our APIs accept and return JSON in the HTTP body and return HTTP response codes to indicate errors. You can consume the APIs directly using your favorite HTTP/REST library or make use of one of our <a href=\"https://docs.checkout.com/quickstart/integrate/sdks\" target=\"_blank\">SDKs</a>.    Our unified payments API allows you to accept payments from cards, digital wallets and the most popular alternative payment methods, as well as pay out to a variety of destinations, all using the same integration.  And with our webhook management, events and disputes APIs, you can keep on top of your transactions and react to any chargebacks, keeping your business running smoothly. # Authentication When you sign up for an account, you are given a secret and public API key pair. You authenticate with our API by providing the appropriate key in the request Authorization header.  Never share your secret keys. Keep them guarded and secure.   <!-- ReDoc-Inject: <security-definitions> --> 

The version of the OpenAPI document: 1.0.0
Contact: support@checkout.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::EventsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EventsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::EventsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EventsApi' do
    it 'should create an instance of EventsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::EventsApi)
    end
  end

  # unit tests for retrieve_event
  # Retrieve event
  # Retrieves the event with the specified identifier string. The event &#x60;data&#x60; includes the full event details, the schema of which will vary based on the &#x60;type&#x60;. 
  # @param event_id The event identifier
  # @param [Hash] opts the optional parameters
  # @return [EventObject]
  describe 'retrieve_event test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_event_notification
  # Retrieve event notification
  # Retrieves the attempts for a specific event notification
  # @param event_id The event identifier
  # @param notification_id The notification identifier
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'retrieve_event_notification test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retrieve_event_types
  # Retrieve event types
  # Retrieve a list of event types grouped by their respective version that you can configure on your webhooks.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :version The API version for which you want to retrieve the event types. Set this to &#x60;1.0&#x60; for the legacy API or &#x60;2.0&#x60; for the Unified Payments API. If no version is specified, event types for both versions will be returned.
  # @return [Array<EventTypesObject>]
  describe 'retrieve_event_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_all_webhooks
  # Retry all webhooks
  # Retries all webhook notifications configured for the specified event
  # @param event_id The event identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'retry_all_webhooks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for retry_webhook
  # Retry webhook
  # Retries a specific webhook notification for the given event
  # @param event_id The event identifier
  # @param webhook_id The webhook identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'retry_webhook test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
