=begin
#Checkout.com API Reference

## Introduction Checkout.com provides a collection of APIs that enable you to process and manage payments.    Our APIs accept and return JSON in the HTTP body and return HTTP response codes to indicate errors. You can consume the APIs directly using your favorite HTTP/REST library or make use of one of our <a href=\"https://docs.checkout.com/quickstart/integrate/sdks\" target=\"_blank\">SDKs</a>.    Our unified payments API allows you to accept payments from cards, digital wallets and the most popular alternative payment methods, as well as pay out to a variety of destinations, all using the same integration.  And with our webhook management, events and disputes APIs, you can keep on top of your transactions and react to any chargebacks, keeping your business running smoothly. # Authentication When you sign up for an account, you are given a secret and public API key pair. You authenticate with our API by providing the appropriate key in the request Authorization header.  Never share your secret keys. Keep them guarded and secure.   <!-- ReDoc-Inject: <security-definitions> --> 

The version of the OpenAPI document: 1.0.0
Contact: support@checkout.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ReconciliationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReconciliationApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ReconciliationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReconciliationApi' do
    it 'should create an instance of ReconciliationApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ReconciliationApi)
    end
  end

  # unit tests for get_csv_payments_report
  # Get CSV payments report
  # In addition to the JSON format returned by the &#x60;reporting/payments&#x60; endpoint, you can also download a CSV report containing the same data. Learn more about &lt;a href&#x3D;\&quot;https://docs.checkout.com/reporting-and-insights/reconciliation-api/payments-endpoint#Paymentsendpoint-HowtoreadtheCSVfile\&quot; target&#x3D;\&quot;_blank\&quot;&gt;how to read your CSV report&lt;/a&gt;.
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :from Date and time from which to search for payments
  # @option opts [Time] :to Date and time until which to search for payments
  # @return [nil]
  describe 'get_csv_payments_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_csv_single_statement_report
  # Get CSV single statement report
  # Downloads a CSV statement report containing all of the data related to a specific statement, based on the statement&#39;s identifier.
  # @param statement_id The unique statement identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_csv_single_statement_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_csv_statements_report
  # Get CSV statements report
  # In addition to the JSON format returned by the &#x60;reporting/statements&#x60; endpoint, you can also download a CSV report containing the same data.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_csv_statements_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_json_payments_report
  # Get JSON payments report
  # Returns a JSON report containing all payments within your specified parameters. You can reconcile the data from this report against your statements (which can be found in the &lt;a href&#x3D;\&quot;https://hub.checkout.com/login\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Hub&lt;/a&gt;), the list of payments in the Hub (using the &#x60;Reference&#x60; field) or your own systems. *Note:* no payments from before 7 February 2019 at 00.00.00 UTC will appear when using the payments endpoint. To view earlier payments, please contact our support team.
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :from Date and time from which to search for payments
  # @option opts [Time] :to Date and time until which to search for payments
  # @option opts [String] :reference Reference of a specific payment to search for
  # @option opts [Integer] :limit Sets a limit on the number of results
  # @return [PaymentsReportResponse]
  describe 'get_json_payments_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_json_single_payment_report
  # Get JSON single payment report
  # Returns a JSON payment report containing all of the data related to a specific payment, based on the payment&#39;s identifier. *Note:* no payments from before 7 February 2019 at 00.00.00 UTC will appear when using the payments endpoint. To view earlier payments, please contact our support team.
  # @param payment_id The unique payment identifier
  # @param [Hash] opts the optional parameters
  # @return [PaymentsReportResponse]
  describe 'get_json_single_payment_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_json_statements_report
  # Get JSON statements report
  # Returns a JSON report containing all statements within your specified parameters. Please note that the timezone for the request will be UTC.
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :from Date and time from which to search for statements
  # @option opts [Time] :to Date and time until which to search for statements
  # @return [StatementsReportResponse]
  describe 'get_json_statements_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
