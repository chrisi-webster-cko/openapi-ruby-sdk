=begin
#Checkout.com API Reference

## Introduction Checkout.com provides a collection of APIs that enable you to process and manage payments.    Our APIs accept and return JSON in the HTTP body and return HTTP response codes to indicate errors. You can consume the APIs directly using your favorite HTTP/REST library or make use of one of our <a href=\"https://docs.checkout.com/quickstart/integrate/sdks\" target=\"_blank\">SDKs</a>.    Our unified payments API allows you to accept payments from cards, digital wallets and the most popular alternative payment methods, as well as pay out to a variety of destinations, all using the same integration.  And with our webhook management, events and disputes APIs, you can keep on top of your transactions and react to any chargebacks, keeping your business running smoothly. # Authentication When you sign up for an account, you are given a secret and public API key pair. You authenticate with our API by providing the appropriate key in the request Authorization header.  Never share your secret keys. Keep them guarded and secure.   <!-- ReDoc-Inject: <security-definitions> --> 

The version of the OpenAPI document: 1.0.0
Contact: support@checkout.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.0

=end

require 'cgi'

module OpenapiClient
  class PaymentLinksApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a Payment Link
    # Create a Payment Link and pass through all the payment information, like the amount, currency, country and reference. 
    # @param payment_links_request [PaymentLinksRequest] 
    # @param [Hash] opts the optional parameters
    # @return [PaymentLinksResponse]
    def create_a_payment_link_session(payment_links_request, opts = {})
      data, _status_code, _headers = create_a_payment_link_session_with_http_info(payment_links_request, opts)
      data
    end

    # Create a Payment Link
    # Create a Payment Link and pass through all the payment information, like the amount, currency, country and reference. 
    # @param payment_links_request [PaymentLinksRequest] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(PaymentLinksResponse, Integer, Hash)>] PaymentLinksResponse data, response status code and response headers
    def create_a_payment_link_session_with_http_info(payment_links_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PaymentLinksApi.create_a_payment_link_session ...'
      end
      # verify the required parameter 'payment_links_request' is set
      if @api_client.config.client_side_validation && payment_links_request.nil?
        fail ArgumentError, "Missing the required parameter 'payment_links_request' when calling PaymentLinksApi.create_a_payment_link_session"
      end
      # resource path
      local_var_path = '/payment-links'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(payment_links_request)

      # return_type
      return_type = opts[:debug_return_type] || 'PaymentLinksResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['ApiSecretKey']

      new_options = opts.merge(
        :operation => :"PaymentLinksApi.create_a_payment_link_session",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PaymentLinksApi#create_a_payment_link_session\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
